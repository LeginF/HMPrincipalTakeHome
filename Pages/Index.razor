@page "/"
@inject HttpClient Http



<h1>Github Search</h1>

Enter your search

<table>
    <tr>
        <th>Topic</th>
        <th><input @bind=Topic /></th>
    </tr>
    <button class="btn btn-primary" @onclick="Search">Search</button>
</table>

@if ((_responses == null))
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table'>
        <thead>
            <tr>
                <th>Name</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in _responses.items)
                {
                    <tr>
                        <td>@item.name</td>
                    </tr>
                }
            }
        </tbody>
    </table>
}


@code 
{
    

    private string Topic {get; set; }

    public class Repository
    {
        public string id {get;set;}
        public string node_id {get;set;}
        public string name {get;set;}
        public string full_name{get;set;}
        //public Owner owner {get;set;}
    }

    private class item
    {
        public string name {get;set;}
        public string path {get;set;}
        public string sha {get;set;}
        public string url {get;set;}
        public string git_url {get;set;}
        public string html_url {get;set;}
        public Repository repository {get;set;}
    }

    private class Response
    {
        public int total_count {get;set;}
        public bool incomplete_results {get;set;}
        public List<item> items{get;set;}
    }

    private Response _responses = null; //new Response();

    
}

@functions 
{
    private void Search()
    {
        Console.WriteLine("Search");
        GetResponses();
    }

   private async Task GetResponses() 
   {
        String url;
        url = "https://api.github.com/search/repositories";
        url += "?q=topic:" + Topic;
        //_responses = await HttpClient.GetJsonAsync<List<Response>>(url);
        //var response = await Http.GetStringAsync(url);
        Console.WriteLine("query:" + url);
        try
        {
        _responses = await Http.GetJsonAsync<Response>(url);
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
            var next = ex.InnerException;
            var i = 0;
            while (next != null)
            {
                Console.WriteLine(next.Message);
                next = next.InnerException;
                if (i++ > 9) break;
            }
        }
        Console.WriteLine("number of responses:{0}",_responses.items.Count());
        StateHasChanged();
   }
}